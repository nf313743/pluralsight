From your root app the router will look at the supplied URL to determine what components and ub components to load

Modules group component trees together so that they can be loaded independently

Everything has to be registered in a modlue in order for it to be used.  Apart from Services which are registered in the root injector and are accessible throughout the application

assets directory is for static files like images

Webpack via the angular.json file loads main.js.  main.js is the main file used to load the angular app
    main.ts will then load the AppModule

Declarations - importing components
Providers - importing services
Imports - importing other modules

To make image files statically available in your app this is an "assets"[] in angular.json
    "styles"[] and "scripts"[] are used for styles and scripts

#thumbnail - template variables - allow access to public members of that component

css styles defined in the component are scoped to the component

############ Module 04
{{interpolation}}
[poperty binding]

These are bounds by expressions

Expressions should:
    Have no side-effects
    Be Fasts
    Idempotent


*ngFor - structural directive as it changes the ctructure of the html

{{event?.name}} - Safe operation operator

*ngIf - useful for hiding elements you know that aren't going to be rendered.  If an element could be rendered, i.e if someone selects a checkbox then the html hidden attribute is better for performance

* ngSwitch="obj.prop" / *ngSwitchCase="" - Do something base on a value
      <span *ngSwitchCase="'8:00 am'">Early start</span> 

Class binding - [class.green]="event?.time === '8:00am'"
    If the event time equals string then add the green class to this div

ngClass used for multiple bindings.  Uses an object:
       [ngClass]="{
          green: event?.time === '8:00 am',
          bold: event?.time === '8:00 am'
        }"

[ngStyle] - Bind css style


######## Module 05
@Injectable needs to be added to services that will have other services injected into it


#### Module 06 - Routing
<router-outlet> - Used to display the resulting component from a route.

RouterModule.forRoot(appRoutes) - gives you routing

<base href="/"> - This tells angular that the app is hosted at the root. If it was hosted at localhost/something/else you'd need to change this value.

ActivatedRoute - This pulls values from url

[routerLink]="['/events', event.id]" - Create link via route.

canActivate:[EventRouteActivator] - Check if a id in route is valid

Q: whats the point of a resolver?

When creating a feature module you import CommonModule.  The main app module with have BrowserModule
When creating a feature module you use RouterModule.forChild rather than forRoot()
loadChildren: "./user/user.module#UserModule" } - Load this module only when first navigated to
